[metadata]
name = plotski
url = https://github.com/lukasz-migas/plotski
download_url = https://github.com/lukasz-migas/plotski
license = MIT
license_file = LICENSE
description = Convenient interactive plotting in Python
long_description = file: README.md
long_description_content_type = text/markdown
author = Lukasz G. Migas
author_email = l.g.migas@tudelft.nl
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: C
    Programming Language :: Python
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Visualization
    Topic :: Utilities
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS

[options]
zip_safe = False
packages = find:
package_dir=
    =src
python_requires = >=3.7
include_package_data = True
install_requires =
    bokeh<=3.0.0
    numpy
    scikit-image
    matplotlib

[options.packages.find]
where=src

[options.package_data]
* = *.pyi

[options.extras_require]
testing =
    pytest
    pytest-faulthandler
    pytest-order
release =
    PyGithub>=1.44.1
    twine>=3.1.1
    pygithub
dev =
    pre-commit>=2.9.0
    black==22.12.0
    flake8==4.0.1
    check-manifest>=0.42
    %(testing)s

[bdist_wheel]
universal = 1

[flake8]
exclude = docs
max-line-length = 120
statistics=True
ignore =
    E203  # whitespace before ':'
    W503  # Line break occurred before a binary operator

[tool:pytest]
collect_ignore = ['setup.py']

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if settings.DEBUG
    raise NotImplementedError
    if __name__ == .__main__.:
    def test

[coverage:run]
source = src/plotski
parallel = True
omit = tests/*
       *\__init__.py
       pragma: no cover
       raise NotImplementedError
       def __repr__
       if __name__ == .__main__.:
       def test
